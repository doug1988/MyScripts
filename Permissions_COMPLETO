USE [DbManagementDBA]

SELECT 'DbManagementDBA' AS DBName, DBPrincipals.name AS DBPrincipal, SrvPrincipals.name AS SrvPrincipal, DBPrincipals.sid, 
   DBPrincipals.type, DBPrincipals.type_desc, DBPrincipals.default_schema_name, 
   DBPrincipals.create_date, DBPrincipals.modify_date, DBPrincipals.is_fixed_role, 
   Authorizations.name AS Role_Authorization, 
   CASE WHEN DBPrincipals.is_fixed_role = 0 AND DBPrincipals.name <> 'dbo' THEN 
           'DROP ' + CASE DBPrincipals.[type] WHEN 'C' THEN NULL 
               WHEN 'K' THEN NULL 
               WHEN 'R' THEN 'ROLE' 
               WHEN 'A' THEN 'APPLICATION ROLE' 
               ELSE 'USER' END + 
           ' '+QUOTENAME(DBPrincipals.name COLLATE SQL_Latin1_General_CP1_CI_AS) + ';' ELSE NULL END AS Drop_Script, 
   CASE WHEN DBPrincipals.is_fixed_role = 0 AND DBPrincipals.name <> 'dbo' THEN 
           'CREATE ' + CASE DBPrincipals.[type] WHEN 'C' THEN NULL 
               WHEN 'K' THEN NULL 
               WHEN 'R' THEN 'ROLE' 
               WHEN 'A' THEN 'APPLICATION ROLE' 
               ELSE 'USER' END + 
           ' '+QUOTENAME(DBPrincipals.name COLLATE SQL_Latin1_General_CP1_CI_AS) END + 
           CASE WHEN DBPrincipals.[type] = 'R' THEN 
               ISNULL(' AUTHORIZATION '+QUOTENAME(Authorizations.name COLLATE SQL_Latin1_General_CP1_CI_AS),'') 
               WHEN DBPrincipals.[type] = 'A' THEN 
                   ''  
               WHEN DBPrincipals.[type] NOT IN ('C','K') THEN 
                   ISNULL(' FOR LOGIN ' + 
                            QUOTENAME(SrvPrincipals.name COLLATE SQL_Latin1_General_CP1_CI_AS),' WITHOUT LOGIN') +  
                   ISNULL(' WITH DEFAULT_SCHEMA =  '+
                            QUOTENAME(DBPrincipals.default_schema_name COLLATE SQL_Latin1_General_CP1_CI_AS),'') 
           ELSE '' 
           END + ';' +  
           CASE WHEN DBPrincipals.[type] NOT IN ('C','K','R','A') 
               AND SrvPrincipals.name IS NULL 
               AND DBPrincipals.sid IS NOT NULL 
               AND DBPrincipals.sid NOT IN (0x00, 0x01)  
               THEN ' -- Possible missing server principal'  
               ELSE '' END 
       AS Create_Script 
FROM sys.database_principals DBPrincipals 
LEFT OUTER JOIN sys.database_principals Authorizations 
   ON DBPrincipals.owning_principal_id = Authorizations.principal_id 
LEFT OUTER JOIN sys.server_principals SrvPrincipals 
   ON DBPrincipals.sid = SrvPrincipals.sid 
   AND DBPrincipals.sid NOT IN (0x00, 0x01) 
WHERE 1=1 
ORDER BY DBPrincipals.name 
 
 
-- Database Role Members
USE [DbManagementDBA]

SELECT 'DbManagementDBA' AS DBName, Users.name AS UserName, Roles.name AS RoleName, 
   CASE WHEN Users.is_fixed_role = 0 AND Users.name <> 'dbo' THEN 
   'EXEC sp_droprolemember @rolename = '+QUOTENAME(Roles.name COLLATE SQL_Latin1_General_CP1_CI_AS,'''')+', @membername = '+QUOTENAME(CASE WHEN Users.name = 'dbo' THEN NULL
                ELSE Users.name END COLLATE SQL_Latin1_General_CP1_CI_AS,'''')+';' END AS Drop_Script, 
   CASE WHEN Users.is_fixed_role = 0 AND Users.name <> 'dbo' THEN 
   'EXEC sp_addrolemember @rolename = '+QUOTENAME(Roles.name COLLATE SQL_Latin1_General_CP1_CI_AS,'''')+', @membername = '+QUOTENAME(CASE WHEN Users.name = 'dbo' THEN NULL
                ELSE Users.name END COLLATE SQL_Latin1_General_CP1_CI_AS,'''')+';' END AS Add_Script 
FROM sys.database_role_members RoleMembers 
JOIN sys.database_principals Users 
   ON RoleMembers.member_principal_id = Users.principal_id 
JOIN sys.database_principals Roles 
   ON RoleMembers.role_principal_id = Roles.principal_id 
WHERE 1=1 
ORDER BY Users.name, Roles.name 
 
 
-- Database & object Permissions
USE [DbManagementDBA]

; WITH ObjectList AS (
   SELECT NULL AS SchemaName , 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       database_id AS id, 
       'DATABASE' AS class_desc,
       '' AS class 
   FROM master.sys.databases
   UNION ALL
   SELECT SCHEMA_NAME(sys.all_objects.schema_id)  COLLATE SQL_Latin1_General_CP1_CI_AS AS SchemaName,
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       object_id AS id, 
       'OBJECT_OR_COLUMN' AS class_desc,
       'OBJECT' AS class 
   FROM sys.all_objects
   UNION ALL
   SELECT name  COLLATE SQL_Latin1_General_CP1_CI_AS AS SchemaName, 
       NULL AS name, 
       schema_id AS id, 
       'SCHEMA' AS class_desc,
       'SCHEMA' AS class 
   FROM sys.schemas
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       principal_id AS id, 
       'DATABASE_PRINCIPAL' AS class_desc,
       CASE type_desc 
           WHEN 'APPLICATION_ROLE' THEN 'APPLICATION ROLE' 
           WHEN 'DATABASE_ROLE' THEN 'ROLE' 
           ELSE 'USER' END AS class 
   FROM sys.database_principals
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       assembly_id AS id, 
       'ASSEMBLY' AS class_desc,
       'ASSEMBLY' AS class 
   FROM sys.assemblies
   UNION ALL
   SELECT SCHEMA_NAME(sys.types.schema_id)  COLLATE SQL_Latin1_General_CP1_CI_AS AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       user_type_id AS id, 
       'TYPE' AS class_desc,
       'TYPE' AS class 
   FROM sys.types
   UNION ALL
   SELECT SCHEMA_NAME(schema_id)  COLLATE SQL_Latin1_General_CP1_CI_AS AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       xml_collection_id AS id, 
       'XML_SCHEMA_COLLECTION' AS class_desc,
       'XML SCHEMA COLLECTION' AS class 
   FROM sys.xml_schema_collections
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       message_type_id AS id, 
       'MESSAGE_TYPE' AS class_desc,
       'MESSAGE TYPE' AS class 
   FROM sys.service_message_types
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       service_contract_id AS id, 
       'SERVICE_CONTRACT' AS class_desc,
       'CONTRACT' AS class 
   FROM sys.service_contracts
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       service_id AS id, 
       'SERVICE' AS class_desc,
       'SERVICE' AS class 
   FROM sys.services
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       remote_service_binding_id AS id, 
       'REMOTE_SERVICE_BINDING' AS class_desc,
       'REMOTE SERVICE BINDING' AS class 
   FROM sys.remote_service_bindings
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       route_id AS id, 
       'ROUTE' AS class_desc,
       'ROUTE' AS class 
   FROM sys.routes
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       fulltext_catalog_id AS id, 
       'FULLTEXT_CATALOG' AS class_desc,
       'FULLTEXT CATALOG' AS class 
   FROM sys.fulltext_catalogs
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       symmetric_key_id AS id, 
       'SYMMETRIC_KEYS' AS class_desc,
       'SYMMETRIC KEY' AS class 
   FROM sys.symmetric_keys
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       certificate_id AS id, 
       'CERTIFICATE' AS class_desc,
       'CERTIFICATE' AS class 
   FROM sys.certificates
   UNION ALL
   SELECT NULL AS SchemaName, 
       name  COLLATE SQL_Latin1_General_CP1_CI_AS AS name, 
       asymmetric_key_id AS id, 
       'ASYMMETRIC_KEY' AS class_desc,
       'ASYMMETRIC KEY' AS class 
   FROM sys.asymmetric_keys
   ) 
SELECT 'DbManagementDBA' AS DBName,
 Grantee.name AS Grantee_Name, Grantor.name AS Grantor_Name, 
   Permission.class_desc, Permission.permission_name, 
   ObjectList.name AS ObjectName, 
   ObjectList.SchemaName, 
   Permission.state_desc,  
   CASE WHEN Grantee.is_fixed_role = 0 AND Grantee.name <> 'dbo' THEN 
   'REVOKE ' + 
   CASE WHEN Permission.[state]  = 'W' THEN 'GRANT OPTION FOR ' ELSE '' END + 
   ' ' + Permission.permission_name COLLATE SQL_Latin1_General_CP1_CI_AS +  
       CASE WHEN Permission.major_id <> 0 THEN ' ON ' + 
           ObjectList.class + '::' +  
           ISNULL(QUOTENAME(ObjectList.SchemaName),'') + 
           CASE WHEN ObjectList.SchemaName + ObjectList.name IS NULL THEN '' ELSE '.' END + 
           ISNULL(QUOTENAME(ObjectList.name),'') 
            COLLATE SQL_Latin1_General_CP1_CI_AS + ' ' ELSE '' END + 
       ' FROM ' + QUOTENAME(Grantee.name COLLATE SQL_Latin1_General_CP1_CI_AS)  + '; ' END AS Revoke_Statement, 
   CASE WHEN Grantee.is_fixed_role = 0 AND Grantee.name <> 'dbo' THEN 
   CASE WHEN Permission.[state]  = 'W' THEN 'GRANT' ELSE Permission.state_desc COLLATE SQL_Latin1_General_CP1_CI_AS END + 
       ' ' + Permission.permission_name COLLATE SQL_Latin1_General_CP1_CI_AS + 
       CASE WHEN Permission.major_id <> 0 THEN ' ON ' + 
           ObjectList.class + '::' +  
           ISNULL(QUOTENAME(ObjectList.SchemaName),'') + 
           CASE WHEN ObjectList.SchemaName + ObjectList.name IS NULL THEN '' ELSE '.' END + 
           ISNULL(QUOTENAME(ObjectList.name),'') 
            COLLATE SQL_Latin1_General_CP1_CI_AS + ' ' ELSE '' END + 
       ' TO ' + QUOTENAME(Grantee.name COLLATE SQL_Latin1_General_CP1_CI_AS)  + ' ' +  
       CASE WHEN Permission.[state]  = 'W' THEN ' WITH GRANT OPTION ' ELSE '' END +  
       ' AS '+ QUOTENAME(Grantor.name COLLATE SQL_Latin1_General_CP1_CI_AS)+';' END AS Grant_Statement 
FROM sys.database_permissions Permission 
JOIN sys.database_principals Grantee 
   ON Permission.grantee_principal_id = Grantee.principal_id 
JOIN sys.database_principals Grantor 
   ON Permission.grantor_principal_id = Grantor.principal_id 
LEFT OUTER JOIN ObjectList 
   ON Permission.major_id = ObjectList.id 
   AND Permission.class_desc = ObjectList.class_desc 
WHERE 1=1 
ORDER BY Grantee.name, ObjectList.name 
